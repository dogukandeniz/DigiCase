//
// Checkbox mixins
//
@mixin chk-default($displayvalue: '') {
    > label {
        cursor: pointer;
        display: flex;
        flex-wrap: wrap;
        width: 100%;
        align-items: center;
        @if not ($displayvalue == '') {
            display: #{$displayvalue};
        }

        &::before {
            content: '';
            display: block;
            position: absolute;
            right: 0;
            background-color: #C4C4C4;
        }
    }

    [type=checkbox]:checked ~ label::before,
    [type=radio]:checked ~ label::before {
        background-position: center center;
        background-repeat: no-repeat;
    }
}

@mixin chk-label-before($width, $height, $border, $radius, $padding) {
    > :nth-child(2) {
        min-width: $width;
        min-height: $height;
        padding: $padding;

        &::before {
            width: $width;
            height: $height;
            border: #{$border};
            border-radius: $radius;
            transition: background-color 0.2s, border 0.2s;
        }
    }
}

@mixin chk-checked-label-before($border, $bg-size, $bg-img, $bg-color: '') {
    [type=checkbox]:checked ~ label::before,
    [type=radio]:checked ~ label::before {
        border: $border !important;
        background-size: $bg-size;
        background-image: svg-background-image($bg-img);

        @if not ($bg-color == '') {
            background-color: $bg-color;
        }
    }
}

@mixin chk-hover-label-before($border, $bg-size: '', $bg-img: '', $bg-color: '', $color: '') {
    &:hover {
        & > label {
            @if not ($color == '') {
                color: $color;
            }

            &::before {
                @if not ($border == '') {
                    border: #{$border};
                }

                @if not ($bg-size == '') {
                    background-size: $bg-size;
                }

                @if not ($bg-img == '') {
                    background-image: $bg-img;
                }

                @if not ($bg-color == '') {
                    background-color: $bg-color;
                }
            }
        }
    }
}

@mixin chk-focus-label-before($border, $bg-size: '', $bg-img: '', $bg-color: '', $color: '') {
    [type=checkbox]:focus ~ label,
    [type=radio]:focus ~ label {
        @if not ($color == '') {
            color: $color;
        }

        &::before {
            @if not ($border == '') {
                border: #{$border};
            }

            @if not ($bg-size == '') {
                background-size: $bg-size;
            }

            @if not ($bg-img == '') {
                background-image: $bg-img;
            }

            @if not ($bg-color == '') {
                background-color: $bg-color;
            }
        }
    }
}

@mixin chk-disabled-label-before($border, $bg-size: '', $bg-img: '', $bg-color: '', $color: '') {
    [type=checkbox]:disabled ~ label,
    [type=radio]:disabled ~ label {
        cursor: not-allowed;

        @if not ($color == '') {
            color: $color;
        }

        &::before {
            @if not ($border == '') {
                border: #{$border};
            }

            @if not ($bg-size == '') {
                background-size: $bg-size;
            }

            @if not ($bg-img == '') {
                background-image: $bg-img;
            }

            @if not ($bg-color == '') {
                background-color: $bg-color;
            }
        }
    }
}


@mixin dynamicTransform($transform...) {
    -webkit-transform: $transform;
    -moz-transform: $transform;
    -ms-transform: $transform;
    -o-transform: $transform;
    transform: $transform;
}

@mixin dynamicTransition($transition...) {
    -moz-transition: $transition;
    -o-transition: $transition;
    -webkit-transition: $transition;
    transition: $transition;
}

@mixin transform-X-animation($duration, $amount) {
    @include dynamicTransition(transform $duration);

    &:hover {
        @include dynamicTransform(TranslateX($amount));
    }
}
